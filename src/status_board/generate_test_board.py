from status_board.models import Board, Project, TaskState, Tasks

mouse_liver = Project(name='Mouse liver tissue pilot (jrc_mus-liver)',
                    tasks=Tasks(sample_prep=TaskState('Done', 2),
                                clem_imaging=TaskState(), 
                                staining=TaskState('Done', 4),
                                tem_imaging=TaskState('Done', 0),
                                fibsem_prep=TaskState('Done', 2),
                                fibsem_imaging=TaskState('Done', 2),
                                fibsem_reconstruction=TaskState('Done', 1),
                                cosem_import=TaskState('Done', 1),
                                ground_truth=TaskState('Done', 2),
                                ml_training=TaskState('Done', 1),
                                ml_inference=TaskState('Done', 1),
                                ml_evaluation=TaskState('Done', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Done', 1),
                                analysis=TaskState('Waiting', 1),
                                public_release=TaskState('Done', 1),
                                other=TaskState()))

mouse_kidney = Project(name='Mouse kidney tissue pilot (jrc_mus-kidney)',
                    tasks=Tasks(sample_prep=TaskState('Done', 2),
                                clem_imaging=TaskState(), 
                                staining=TaskState('Done', 4),
                                tem_imaging=TaskState('Done', 0),
                                fibsem_prep=TaskState('Done', 2),
                                fibsem_imaging=TaskState('Done', 2),
                                fibsem_reconstruction=TaskState('Done', 1),
                                cosem_import=TaskState('Done', 1),
                                ground_truth=TaskState('Done', 2),
                                ml_training=TaskState('Done', 1),
                                ml_inference=TaskState('Done', 1),
                                ml_evaluation=TaskState('Done', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Done', 1),
                                analysis=TaskState('Waiting', 1),
                                public_release=TaskState('Done', 1),
                                other=TaskState()))


renal_cell = Project(name='Renal Cell Carcinoma pilot 1 (jrc_UT21-1413-003)',
                    tasks=Tasks(sample_prep=TaskState('Done', 2),
                                clem_imaging=TaskState(), 
                                staining=TaskState('Done', 5),
                                tem_imaging=TaskState('Done', 1),
                                fibsem_prep=TaskState('Done', 3),
                                fibsem_imaging=TaskState('Done', 1),
                                fibsem_reconstruction=TaskState('Done', 0),
                                cosem_import=TaskState('Done', 1),
                                ground_truth=TaskState('Progressing', 2),
                                ml_training=TaskState('Queuing', 1),
                                ml_inference=TaskState('Waiting', 1),
                                ml_evaluation=TaskState('Waiting', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Waiting', 1),
                                analysis=TaskState('Waiting', 1),
                                public_release=TaskState('Waiting', 1),
                                other=TaskState()))

liver_metab = Project(name='Metabolic Liver Zonation pilot 1 (jrc_mus-liv-zon-1)',
                    tasks=Tasks(sample_prep=TaskState('Done', 2),
                                clem_imaging=TaskState(), 
                                staining=TaskState('Done', 6),
                                tem_imaging=TaskState('Done', 0),
                                fibsem_prep=TaskState('Done', 3),
                                fibsem_imaging=TaskState('Progressing', 8),
                                fibsem_reconstruction=TaskState('Queuing', 1),
                                cosem_import=TaskState('Queuing', 1),
                                ground_truth=TaskState('Waiting', 2),
                                ml_training=TaskState('Waiting', 1),
                                ml_inference=TaskState('Waiting', 1),
                                ml_evaluation=TaskState('Waiting', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Waiting', 1),
                                analysis=TaskState('Waiting', 1),
                                public_release=TaskState('Waiting', 1),
                                other=TaskState()))

ml_probe_pilot_0 = Project(name='ML Probe pilot 0, endosomes (jrc_sum159-4; already existing data)',
                    tasks=Tasks(sample_prep=TaskState(),
                                clem_imaging=TaskState(), 
                                staining=TaskState(),
                                tem_imaging=TaskState(),
                                fibsem_prep=TaskState(),
                                fibsem_imaging=TaskState(),
                                fibsem_reconstruction=TaskState(),
                                cosem_import=TaskState('Done', 1),
                                ground_truth=TaskState('Progressing', 2),
                                ml_training=TaskState('Progressing', 1),
                                ml_inference=TaskState('Queuing', 1),
                                ml_evaluation=TaskState('Waiting', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Waiting', 1),
                                analysis=TaskState('Planning', 1),
                                public_release=TaskState('Waiting', 1),
                                other=TaskState()))

ml_probe_pilot_1 = Project(name='ML probe pilot 1: endosomes',
                    tasks=Tasks(sample_prep=TaskState(),
                                clem_imaging=TaskState(), 
                                staining=TaskState(),
                                tem_imaging=TaskState(),
                                fibsem_prep=TaskState(),
                                fibsem_imaging=TaskState(),
                                fibsem_reconstruction=TaskState(),
                                cosem_import=TaskState('Done', 1),
                                ground_truth=TaskState('Progressing', 2),
                                ml_training=TaskState('Progressing', 1),
                                ml_inference=TaskState('Queuing', 1),
                                ml_evaluation=TaskState('Waiting', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Waiting', 1),
                                analysis=TaskState('Planning', 1),
                                public_release=TaskState('Waiting', 1),
                                other=TaskState()))

ml_probe_pilot_2 = Project(name='ML probe pilot 2: phase condensates',
                    tasks=Tasks(sample_prep=TaskState('Planning', 3),
                                clem_imaging=TaskState('Waiting', 1), 
                                staining=TaskState('Waiting', 6),
                                tem_imaging=TaskState('Waiting', 0),
                                fibsem_prep=TaskState('Waiting', 2),
                                fibsem_imaging=TaskState('Waiting', 1),
                                fibsem_reconstruction=TaskState('Waiting', 0),
                                cosem_import=TaskState('Waiting', 1),
                                ground_truth=TaskState('Waiting', 2),
                                ml_training=TaskState('Waiting', 1),
                                ml_inference=TaskState('Waiting', 1),
                                ml_evaluation=TaskState('Waiting', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Waiting', 1),
                                analysis=TaskState('Planning', 1),
                                public_release=TaskState('Waiting', 1),
                                other=TaskState()))

learned_simulation_1 = Project(name='Learned simulation pilot project 1, sperm flagella',
                    tasks=Tasks(sample_prep=TaskState('Done', 2),
                                clem_imaging=TaskState(), 
                                staining=TaskState('Progressing', 2),
                                tem_imaging=TaskState('Queuing', 0),
                                fibsem_prep=TaskState('Waiting', 2),
                                fibsem_imaging=TaskState('Waiting', 1),
                                fibsem_reconstruction=TaskState('Waiting', 0),
                                cosem_import=TaskState('Waiting', 1),
                                ground_truth=TaskState('Waiting', 2),
                                ml_training=TaskState('Waiting', 1),
                                ml_inference=TaskState('Waiting', 1),
                                ml_evaluation=TaskState('Waiting', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Waiting', 1),
                                analysis=TaskState('Planning', 1),
                                public_release=TaskState('Waiting', 1),
                                other=TaskState()))

zebrafish_cardiac_tissue = Project(name='Zebrafish cardiac tissue pilot 1',
                    tasks=Tasks(sample_prep=TaskState('Planning', 2),
                                clem_imaging=TaskState(), 
                                staining=TaskState('Waiting', 4),
                                tem_imaging=TaskState('Waiting', 0),
                                fibsem_prep=TaskState('Waiting', 2),
                                fibsem_imaging=TaskState('Waiting', 2),
                                fibsem_reconstruction=TaskState('Waiting', 0),
                                cosem_import=TaskState('Waiting', 1),
                                ground_truth=TaskState('Waiting', 2),
                                ml_training=TaskState('Waiting', 1),
                                ml_inference=TaskState('Waiting', 1),
                                ml_evaluation=TaskState('Waiting', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Waiting', 1),
                                analysis=TaskState('Planning', 1),
                                public_release=TaskState('Waiting', 1),
                                other=TaskState()))


mouse_corticospinal_tract = Project(name='Mouse corticospinal tract segmentations',
                    tasks=Tasks(sample_prep=TaskState(),
                                clem_imaging=TaskState(), 
                                staining=TaskState(),
                                tem_imaging=TaskState(),
                                fibsem_prep=TaskState(),
                                fibsem_imaging=TaskState(),
                                fibsem_reconstruction=TaskState(),
                                cosem_import=TaskState('Progressing', 1),
                                ground_truth=TaskState('Queuing', 2),
                                ml_training=TaskState('Waiting', 1),
                                ml_inference=TaskState('Waiting', 1),
                                ml_evaluation=TaskState('Waiting', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Waiting', 1),
                                analysis=TaskState('Planning', 1),
                                public_release=TaskState('Queuing', 1),
                                other=TaskState()))

er_striations = Project(name='ER striations in mouse and drosophila',
                    tasks=Tasks(sample_prep=TaskState(),
                                clem_imaging=TaskState(), 
                                staining=TaskState(),
                                tem_imaging=TaskState(),
                                fibsem_prep=TaskState(),
                                fibsem_imaging=TaskState(),
                                fibsem_reconstruction=TaskState(),
                                cosem_import=TaskState('Done', 1),
                                ground_truth=TaskState('Done', 2),
                                ml_training=TaskState('Waiting', 1),
                                ml_inference=TaskState(),
                                ml_evaluation=TaskState(),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState(),
                                analysis=TaskState('Done', 2),
                                public_release=TaskState(),
                                other=TaskState()))

hemibrain = Project(name='Hemibrain segmentations',
                    tasks=Tasks(sample_prep=TaskState(),
                                clem_imaging=TaskState(), 
                                staining=TaskState(),
                                tem_imaging=TaskState(),
                                fibsem_prep=TaskState(),
                                fibsem_imaging=TaskState(),
                                fibsem_reconstruction=TaskState(),
                                cosem_import=TaskState('Done', 1),
                                ground_truth=TaskState('Progressing', 2),
                                ml_training=TaskState('Queuing', 1),
                                ml_inference=TaskState('Waiting', 1),
                                ml_evaluation=TaskState('Waiting', 2),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState('Waiting', 1),
                                analysis=TaskState('Planning', 1),
                                public_release=TaskState(),
                                other=TaskState()))

easifish = Project(name='EASI-FISH in mouse liver pilot',
                    tasks=Tasks(sample_prep=TaskState(),
                                clem_imaging=TaskState(), 
                                staining=TaskState(),
                                tem_imaging=TaskState(),
                                fibsem_prep=TaskState(),
                                fibsem_imaging=TaskState(),
                                fibsem_reconstruction=TaskState(),
                                cosem_import=TaskState(),
                                ground_truth=TaskState(),
                                ml_training=TaskState(),
                                ml_inference=TaskState(),
                                ml_evaluation=TaskState(),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState(),
                                analysis=TaskState(),
                                public_release=TaskState(),
                                other=TaskState('Progressing', 6)))

easifish_organelles = Project(name='EASI-FISH + organelles in mouse liver pilot',
                    tasks=Tasks(sample_prep=TaskState(),
                                clem_imaging=TaskState(), 
                                staining=TaskState(),
                                tem_imaging=TaskState(),
                                fibsem_prep=TaskState(),
                                fibsem_imaging=TaskState(),
                                fibsem_reconstruction=TaskState(),
                                cosem_import=TaskState(),
                                ground_truth=TaskState(),
                                ml_training=TaskState(),
                                ml_inference=TaskState(),
                                ml_evaluation=TaskState(),
                                clem_registration=TaskState(),
                                ml_refinement=TaskState(),
                                analysis=TaskState(),
                                public_release=TaskState(),
                                other=TaskState('Planning', 8)))

board = Board(projects=[mouse_liver,
                        mouse_kidney,
                        renal_cell, 
                        liver_metab,
                        ml_probe_pilot_0,
                        ml_probe_pilot_1,
                        ml_probe_pilot_2,
                        learned_simulation_1,
                        zebrafish_cardiac_tissue,
                        mouse_corticospinal_tract,
                        er_striations,
                        hemibrain,
                        easifish, 
                        easifish_organelles])

